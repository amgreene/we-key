TO DO
======================================================================

INFRASTRUCTURE

# Use config file to locate data directory instead of hardcoded path
# auto-index when timestamps require it
# Formalize virtualenv bootstrap
# Decide if we want to stick with flask

ARCHITECTURE

# Page object should lazyload
# make Page act more databasey (linking to others, etc.)
# Make cleaner distinction between AtPath instances and Page instances
# Demote __getattr__ from Page to Info

DATA AND METADATA

# How to handle structured info better (e.g. marriage) by using indentation
# any info can have metadata
# this means that info values are themselves classes (and info is probably that class too)
# support for confidence levels
# support for external URLs
# Need to allow for escaped @?
# tag \source for data
# within a document, be able to mark blocks as being \about @people
# schema to validate info tags
# make text (and info?) a structured tree, with {} designating atoms?
# Implicit identification of family name vs given name?

DATA VALIDATION

# Validate @paths
# Check that marriages are symmetrical
# Check that children are born a reasonable time after their parents

AUTO-GENERATED CONTENT SUMMARY

# Generalize ancestors minitree so it doesn't assume at most one each of father, mother
# Ancestors could display one more generation by using parens and commas immediately after each grgrp's name
# Display compact list of descendants under the ancestors list
# Complete life chronology

APPEARANCE

# Better font choices in css
# "Header" stuff on the side, not the top
# Head shot/primary image
# Make display of auto-indexed xref links sensitive to the type of xref document
# jquery?
# Smallcaps for last names?

NAVIGATION

# Search site (using regex)
# Add support for internal TOC within text
# "list of all people/documents" (sortable by name, location, modified stamp, birth date, record date, etc.)
# Auto-link dates into chronology

----------------------------------------------------------------------

# Types of pages: 
# - Documents (B_ M_ D_ N_ T_ C_ A_ P_ X_ birth/marriage/death/natl/travel (eg passenger list)/census/article/photo/other)
# - People
# - Research dossiers 
# - Places (cities, addresses, etc.?)
# - Articles

----------------------------------------------------------------------

Sprint 3 -- in process

# DONE Serve up images (simply for now)

Sprint 2 -- 2014-02-05

# DONE If it's a @FooBar, then when pretty-printing it insert spaces
# DONE add "last modified" timestamp to bottom of page
# DONE make reindexing easier to get to
# DONE The indexes should be JSON
# DONE Generate a relationship index alongside the general-purpose xref index
# DONE display list of children (computed) (proof of data flow)
# DONE cache page objects once loaded
# DONE display compact list of ancestors in upper right

Sprint 1 -- 2014-02-04

# DONE Put this in git
# DONE Compute reverse index 
# DONE Display xrefs from reverse index
# DONE format.py is the wrong name for that file
# DONE Nicer formatting of transcribed forms
# DONE add Unicode support; Hebrew Name as a person property
# DONE add default text for pages that don't have any
# DONE Page object should and use generalized __getattr__ to access members of info
# DONE info should be a defaultdict(list)
